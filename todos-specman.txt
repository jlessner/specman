Changemark-Recovery
- Wenn man als allererste Operation nach dem Öffnen einer Datei einen neuen Textparagraphen einfügt, dann funktoniert das Undo dafür nicht. Macht man
   davor (oder auch danach!) irgendeine andere Operation, dann funktioniert es

Aus UC-791
- Schrittreferenzen werden im Outro und Catch-Blöcken des UC-791 nicht aktualisiert. Allgemein geht es aber.
- Focus in Tabellen durch Drücken von TAB verschieben
- Falsche Caret-Position bei Drücken von RETURN in einem Listitem
- Unsaubere Trennung bei Drücken von RETURN innerhalb eines Listitem, das man grade neu angelegt hat. Wenn man die Datei erst einmal speichert, funktioniert es anschließend.
- Hoch/Runterscrollen über Grenzen von Schritten wäre cool
- Die meisten Texte im PDF-Export sind etwas zu klein, wenn man auf 120% Zoom exportiert
- Sortierung der Schritte im Auswahldialog für Schritterefenzen ist ungünstig. Vmtl. lexikografisch.
- Optionale Namen für implizite Subsequenzen. Oder Spacer mit Text aber ohne Nummer. Ist noch flexibler einsetzbar.

Abschluss für Go-Live
x Schrittnummerreferenzen gehen bei Annahme von Änderungen kaputt
x Neu eingefügte, übergroße Bilder sind initial etwas zu groß, so dass man nicht an den linken Rand herankommt, um die Größe zu ändern
x Hoch/Runterscrollen über Grenzen von EditAreas innerhalb eines Schritts
x STRG+C bewirkt in Änderungsmodus eine Löschmarkierung des zuvor markierten Texts. Es sollte gar keine Textänderung erfolgen!
- Line Items als EditAreas
  x Beim Anlegen: Sauberes Herausschneiden des Bereichs zwischen zwei harten Zeilenumbrüchen
    Element currentElement = StyledDocument.getElement(caretPosition)
    int startOffset = currentElement.getStartOffset();
    int endOffset = currentElement.getEndOffset();
  x Entfernen, wenn Caret sich bereits in einem Line Items befindet
  x Unterscheidung nummeriert / nicht nummeriert
  - Saubere Darstellung des Labels
    - Vertikal, nicht nummeriert: Mitte der ersten Zeile abhängig von der Zeilenhöhe - hängt von der größten Schrift in der ersten Zeile ab (-> JEditorPaneUtilities)
    - Vertikal, nummeriert: Baseline der ersten Zeile (-> JEditorPaneUtilities)
    - Horizontal: zoom-abhängiger rechter Abstand (sorgt für rechtsbündig bei nummeriert)
    - Wie groß machen wir die Schrift für Nummernlabel? In Word gibt's Regeln. Am besten erstmal: Standardgröße
    - Wie darstellen, wenn man im Änderungsmodus LI zu normalem Text macht
  - Undo / Redo für LI anlegen und LI entfernen
  - PDF-Rendering - in dem Zuge LIRecordingListView und Konsorten entfernen
  - Irgendeine Idee für mehrstufige LIs?
  x Alte LI-Buttons entfernen
- Darstellung von Catch-Bereichen überarbeiten (siehe Powerpoint)
  - Wenn der Break-Schritt ohne Änderungsmodus angelegt wurde, die Catch-Sequence aber schon, dann hat die
     Überschrift der Case-Sequenz keine Änderungsmarkierung. Ist das richtig oder falsch?
  - Unterstützen wir abgesetzte Darstellung? Wäre nicht schlecht. Aber wie schaltet man um? Der Catchbereich selbst hat keinen Text.
  - DraggingLogic#addNeuerSchritt: Catch-Schritt behandeln
    - Darf nur unter den letzten Schritt einer Sequenz gedragged werden.
  - Break-Schritte dürfen (noch) nicht in Catch-Sequenzen eingefügt werden. Vielleicht sollten wir insgesamt zunächst nur
     Einfache Schritte zulassen
  - Wenn es in der CatchUeberschrift beim Größer- und Kleinerschieben zu Veränderungen der Höhe durch Zeilenumbrüche kommt, geht manchmal
     das Layout zeitweise kaputt. Nach ein paarmal "hinterherschieben" passt es dann wieder.
  - Wenn man in einen Break-Schritt eine Tabelle reinsetzt, funktioniert die Inhaltsübertragung an die jeweils andere Stelle
     manchmal nur verzögert. Werden die FokusListener sauber an allen Tabellenzellen propagiert? Sieht auf den ersten Blick OK aus
  - Übertragung einer Inhaltsänderung bei FocusLost kommt als separate Aktion in die Undo-Historie. Das ist nicht schön
  - Nice to have: *eine* Catch-Sequenz für *mehrere* Breaks, die Behandlung für verschiedene Fehler innerhalb einer Sequenz oft gleich ist
  x PDF Export
  x Als gelöscht markierte Catch-Sequenz nicht mehr mit Breakschritt synchronisieren. Beim Zurücknehmen der Löschung ggf. resynchronisieren
  x Resizing der Spalten
  x Balken werden initial von Datei nicht skaliert
  x SchrittSequenzView(SchrittSequenzModel_V001 model): Case-Sequenzen wieder aufbauen
  x SchrittSequenzView#populateModel: Case-Sequenzen aufnehmen
  x KlappButton ist noch nicht zu sehen
  x Schrittnummer in den Catch-Überschriften wird aus unbekanntem Grund nicht angezeigt
  x queryUnlinkedBreakSteps für alle Schritttypen implementieren
  x Catch-Sequence im Änderungsmodus entfernen
     x UndoableCatchEntferntMarkiert
     x Löschung zurücknehmen
     x Löschung annehmen
     x als gelöscht markieren
     x verlinkten Break-schritt als gelöscht markieren -> Case-Sequenz ebenfalls als gelöscht markieren
  x Übernehmen von Änderungen muss auch Catch-Sequenzen durchlaufen
  x UndoableSchrittEntfernt muss für verlinkte Break-Schritte auch das Entfernen der Catch-Sequence umfassen. müsste durch
     composeUndo eigentlich schon automatisch funktionieren
  x UndoableCatchEntfernt implementieren
  x UndoableCatchHinzugefuegt implementieren
  x Auflösen der Verbindung beim Löschen von Catch-Sequenzen
  x Verfahren der Verknüpfung von Break und Catch überarbeiten / säubern
  x Catch-Sequenz entfernen
  x Catch-Bereich unsichtbar machen, wenn die letzte Catch-Sequenz entfernt wird
  x Schritt in Catch-Sequenz einfügen
  x Schritt aus Catch-Sequenz entfernen
  x Catch-Bereich erst sichtbar machen, wenn mindestens eine Catch-Sequenz drin steckt
  x Zoom der Bars und der Sequenzen

- Suche über ganzes Modell
  - FindReplaceAction.updateContextState korrekt implementieren
    wird aufgerufen, wenn der User bei geöffnetem Dialog den Caret in einem Textfeld ändert
    ACHTUNG: wird im Moment auch ausgelöst, wenn wir im Suchdialog von einem Feld zum nächsten
      springen und im neuen Feld die Caretposition auf 0 setzen. Hier am besten mal schauen, warum
      das im Ursprungscode des Dialogs beim Ersetzen nicht auch schon ein Problem war.
  - Verlorener Focus Problem: einen einfachen Schritt einfügen, dann wiederholt nach "bla" suchen.
     Jedes 2. Mal nach der Meldung, dass kein Ergebnis vorliegt, kein Fokus mehr vorhanden und durch Klicken
     in die Felder auch nicht wieder herstellbar.
  x Ersetzung ist nicht atomar, sondern besteht aus Löschen des alten Inhalts, und Einsetzen des neuen Inhalts
     sollten wir für ein schöneres Undo besser machen
x PDF-Export
  - Font-Einschränkung wieder entfernen
    Das Problem: der Sitka-Font ist nachwievor ein guter Default wegen der guten Renderingeigenschaften für UI *und* PDF.
      Wenn man in FormattedShapeText aber wieder schreibt DefaultFontProvider(true, true, true) dann ist Sitka nicht mehr
      der Defaultfont. Es gibt einen Konstruktor mit einem 4. Parameter zur Angabe der Default Font Familiy, den habe ich
      aber noch nicht zum Fliegen gebracht. Man kommt dann trotz "Sitka" als defaultFontFamily in der Methode
      FontSelector.bestMatch bei einem der anderen Fonts raus.
    Und auch im UI ist "Default" etwas anderes als der Font, den man über JEditorPane.setFont einstellt, wenn man später
      ein Stück Text markiert und explizit über das Menü auf den Default-Font umstellt, so dass im HTML steht
      <font face=\"Default\">Schritt</font> Evt. muss man hier noch an das Stylesheet von HTMLEditorKit bzw. JEditorPane
      dran.
    Beides muss also noch sauber verstanden und verheiratet werden
  - Nice to have: Seitenzahlen bei Tiling
  - Nice to have: Bulletpoints / Zahlen von Lineitems liegen nicht auf der Baseline des Lineitem-Texts
  - Nice to have: Springen über Schrittreferenzen im PDF
  x Initiales Verzeichnis für PDF-Export = Ablageort der .nsd-Datei
  x Formatauswahl: A4/A3, Querformat/Hochformat, Tiling ja/nein, Auswahl in den Benutzereinstellungen
  x Renderfehler von gutenmorgen.xsd lösen:
    x g von "Solange" bei 120% abgeschnitten
    x Gelber Hintergrund von "auf Snooze stellen" nur halb hoch
    x "Werktag" nicht zu sehen
    x "Wochentag prüfen" und "Lust auf Kaffee" rechtsbündig statt zentriert
  x Rendering von Bulletpoints und Zahlen für Listitems
  x Überschriften erscheinen nach oben versetzt
  x Text, der übermäßig viel Platz in der Höhe hat (wegen Nachbartext mit höherem Bedarf), wird am Fuß angezeigt statt am Kopf des Bereichs
  x Anpassung der Fontgrößen aus Tags wie <font size="6">
  x Abstände um eine H1 herum wachsen bei Änderung des UI-Zoomfaktors überproportional
  x Fettschrift in PDF-Texten funktioniert nicht trotz gleichem Truetype-Font in Swing und PDF
     So la la gelöst. UI morphed den regulären Font, html2pdf arbeitet mit 4 Fontfamilien (regular, bold, italic, bold+italic)
  x Korrekte Behandlung von Zoomfaktor kombiniert mit Swing-zu-PDF-Skalierung
  x Abgesetzte Darstellung
  x rechtsbündige und zentrierte Texte nicht korrekt platziert
  x Scrollposition aus der Positionierung im PDF herausrechnen
  x Seitenumbrüche
  x Texte über und unter Diagramm
  x Bilder und unterstrukturierte EditContainer (aktuell nur 1. TextEditArea)
- Neben Serif-Font auch Sans Serif und Monospace Font einbauen und alle anderen entfernen
  - Muss auch alles PDF-tauglich sein
- Ordentliche Fehlermeldungsanzeige
- Permanente Aktualisierung der Birdsview oder vielleicht erst mal Birdsview rausnehmen
- Vielleicht eine kleiner Top-Inset für Schritt-Texte, um die Überschneidung mit den Labels zu verringern?
- Doku aktualisieren
- Beschriftungen internationalisieren
x Zusätzliche Ablage aller Plain Texte im Modell / auf Datei zwecks Durchsuchbarkeit aus IDEs heraus
x Tabellen als separate Elemente analog Bilder
  - Nice to have: Einfärben von Zellen (statt Schritt), wenn Fokus in Tabellenzelle steht
  - Nice to have: Springen in die nächste Zelle durch Drücken von TAB
  - Nice to have: Hinzufügen von Zeilen durch Drücken von TAB in der letzten Zelle?
  x Zurücknehmen hinzugefügter Zeilen und Spalten
  x Löschen neu hinzugefügter Zeilen und Spalten muss direkt Wirkung zeigen
  x Berücksichtigen von Änderungsmodus beim Hinzufügen / Löschen von Zeilen
  x Berücksichtigen von Änderungsmodus beim Hinzufügen / Löschen von Spalten
  x Gelöscht markierte Zeilen und Spalten dürfen keine Löschung mehr erlauben
  x Gelöscht markierte Tabelle darf kein Löschen / Hinzufügen von Zeilen / Spalten mehr erlauben
  x UndoableTableRemovedMarked
  x Berücksichtigen von Änderungsmodus beim Hinzufügen / Löschen einer Tabelle
  x Hinzufügen / Löschen von Spalten (Löschen der letzten Spalte = Löschen der Tabelle)
  x Undo / Redo für Hinzufügen / Löschen von Zeilen
  x Hinzufügen / Löschen von Zeilen (Löschen der letzten Zeile = Löschen der Tabelle)
  x Undo / Redo für Hinzufügen / Löschen von Zeilen
  x Anpassung von Spaltenbreiten

Bugs fixen
- Nach dem Löschen eines Breakschritts mit verknüpfter Catch-Sequenz wird beim Undo zwar beides wieder hergestellt aber die Verknüpfung nicht
- Fehler in UndoableSchrittVerschobenMarkiert.undoEdit:
   Bei neuem Quellschritt erfolgt ein Aufruf von step.aenderungsmarkierungenEntfernen();
   Dadurch gehen auch Änderungen *vor* der Verschiebung verloren.
- Falsche Fontgröße für "bar" im PDF-Export bei <font size="3">foo<span>bar</span></font>
   Vielleicht weil die Styles von span und font[size=3]>span beide passen
- Nach dem Annehmen von Änderungen sieht speziell gestylter Text wie z.B. Designanmerkungen (klein, kursiv) im Editor sauber aus,
    ist aber im PDF u.U. stark zerstört.
- Neue Texte in Tabellen sind im HTML eingefasst in <p style=\"margin-top: 0\"> TEXT </p>
    Das führt zu einer verschobenen Darstellung im PDF-Export
- Der Dialog für Schritt-Links hat keinen Scrollbalken und erlaubt folglich keine Schritte mit höheren Nummern zu adressieren
x Doppeltes Einfügen durch DraggingLogic, wenn Fokus in einer Überschrift eines Zweigs steht
- Da Änderungen im Text durch Textfarbe erkannt wird, bleiben beim Zurücknehmen von Änderungen eingefügte Zeilenumbrüche und
    HTML-Aufzählungszeichen zurück
- Ändern des Paragraphtypen lässt sich nicht zurücknehmen
- Letzter Zeilenumbruch in einem Schritt kann nicht entfernt werden
    - Problem ist, dass der Umbruch nicht entfernt werden kann, da der Offset angeblich größer als das Dokumentenende ist:
      RemoveAction.actionPerformed(e) -> HTMLUtils.removeElement()Zeile199 - Es wird erkannt, dass der Offset des zu entfernenden Elements größer ist
      als die Länge des Documents und die zu entfernende Länge auf 0 reduziert wird. Dies führt dazu, dass der Zeilenumbruch nicht entfernt wird.
      Eine Ausgabe von document.getText() mit den Offsets gibt jedoch den erwarteten Text (\n) zurück.
- Gleiches Problem wie oben, nur andere Stelle: Exception beim Zurücknehmen von Einfügungen mit Zeilenumbrüchen:
    Caused by: javax.swing.text.BadLocationException: Invalid remove
        at java.desktop/javax.swing.text.AbstractDocument.handleRemove(AbstractDocument.java:634)
        at java.desktop/javax.swing.text.AbstractDocument.remove(AbstractDocument.java:619)
        at specman.editarea.TextEditArea.removeTextAndUnregisterStepnumberLinks(TextEditArea.java:580)
        ... 44 more
x Beim Undo einer Verschiebung eines BreakSchritts im Änderungsmodus, wird die Schrittnummer im verlinkten Catch-Schritt nicht mehr gerendert
     Repaint des Diagramms bringt sie wieder zum Vorschein.
x Wenn man einen Breakschritt mit angekoppeltem Catch-Schritt verschiebt, verschwinden der Catch-Schritt
x Superhohe Break-Schritte sehen übel aus. Entsteht z.B. wenn in einem Case ein Fall nur durch einen einzelnen Breakschritt behandelt wird
    (siehe BALI UC-715, Unbekannter Nachrichtentyp). Aktueller Workaround: leeren Schritt anhängen
x Annehmen / Verwerfen von Änderungen schließt Intro und Outro nicht mit ein
- Komplettes Rewrite von DraggingLogic
- resyncSchrittnummerStil sollte nur beim Aufbau aus Modell verwendet werden. Ansonsten sollte beim (Neu-)Setzen der ID der Stil immer erhalten bleiben, abhängig von Geloescht und Quellschritt
- Fokus setzen beim Entfernen des vorletzten Schritts
- Löschen des vorletzten Zweigs erlauben
- Abfangen des Löschens des letzten Zweigs im Case
- NumberStepBackground in RoundedBorderDecorator schwarz färben wenn Schritt gelöscht ist
- 'Cannot invoke "specman.SpaltenResizer.getShape()" because "this.breitenAnpasser" is null' in PDF-Export with no diagram
x Undo/Redo-Problem in Tabellen
    Vorbereitung: Tabelle hinzufügen, Zeile hinzufügen, darin Text eintippen, Tabelle löschen
    Den gesamten Vorgang über Undos zurücknehmen - klappt alles
    Den gesamten Vorgang über Redos wieder herstellen - die Wiederherstellung des Texts klappt nicht
    Dürfte daran liegen, dass UndoableTableRowAdded im redo eine völlig neue leer Zeile hinzufügt statt die ursprüngliche
x Schriftfarbe initialer Texte ist beim Anlegen neuer Schritte nicht überall gelb
x Hellgelber Hintergrund wird beim Laden von Datei nicht überall wieder hergestellt
x Schrift ohne Änderungsmarkierung hat *weißen* Hintergrund, müsste aber *keinen* haben, damit die Hintergrundfarbe des Feldes durchscheint


Auf längere Sicht - nicht notwendig für ersten Go-Live:
- Schritt-Morphing: If/Else -> Case usw.
- Zooming aus Undo-Liste entfernen
- Kommentare
- Code auf Englisch übersetzen
- Sprache wählen
- Sonst-Zweig in Cases Entfernen / Hinzufügen
- Button-Enabling
- Spellchecker
- Mehrere Changesets
- Annehmen *einzelner* Änderungen

Tipps und Tricks
- Pixelgenauer Größenvergleich zwischen UI und PDF-Export geht mit 85,2% Zoomfaktor im Acrobat Reader
